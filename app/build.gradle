plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.cookpad.hiring.android"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BaseURL", "\"https://cookpad.github.io/global-mobile-hiring/api/\"")
        }
        staging {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BaseURL", "\"https://cookpad.github.io/global-mobile-hiring/api/\"")
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BaseURL", "\"https://cookpad.github.io/global-mobile-hiring/api/\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    kapt {
        correctErrorTypes = true
    }
}

dependencies {
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$view_model_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefresh_layout_version"
    //room local DB
    implementation "androidx.room:room-common:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation 'androidx.test.ext:junit-ktx:1.1.3'
    kapt "androidx.room:room-compiler:$room_version"
    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // hilt
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")
    implementation "com.google.dagger:hilt-android:$hilt_version"
    annotationProcessor "com.google.dagger:hilt-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-work:1.0.0'
    // For instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    androidTestAnnotationProcessor "com.google.dagger:hilt-compiler:$hilt_version"
    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    testAnnotationProcessor "com.google.dagger:hilt-compiler:$hilt_version"
    // Network
    implementation "com.squareup.retrofit2:retrofit:$retrofit_2_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$http_interceptor_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mock_web_server_version"
    // glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    // gson
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_2_version"
    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    //arch for testing...
    testImplementation "android.arch.core:core-testing:$android_core_testing_version"
    //Power Mock
    testImplementation "org.powermock:powermock-module-junit4:$power_mock_junit_4_version"
    testImplementation "org.powermock:powermock-module-junit4-rule:$power_mock_junit_4_version"
    testImplementation "org.powermock:powermock-api-mockito2:$power_mock_api_2_version"
    //robotium dependencies...
    testImplementation "org.robolectric:robolectric:$robo_electric_version"
    // Testing
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_version_kotlin_version"
    androidTestImplementation "androidx.test.ext:junit:$android_test_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    androidTestImplementation "androidx.test:runner:$android_test_runner_version"
    debugImplementation("androidx.fragment:fragment-testing:1.5.4")
    implementation("androidx.work:work-runtime-ktx:2.7.1")
}